---
- hosts: all
  vars:
    - tests_container: ghcr.io/szyminson/ctr-tools-test:v0.4.0
    - in_container_result_dir: /var/ctr-tools-test/results
    - result_base_dir: /tmp/ctr-tools-test
    - container_name: ctr-tools-test
    - ctr_tools:
      - docker
      - podman
  tasks:
    - name: Make sure tmux is installed
      become: true
      apt:
        pkg: tmux
        state: present

    - name: Check if all necessary container engines are installed
      ansible.builtin.command: "{{ item }} --version"
      loop: "{{ ctr_tools }}"
      tags: tests

    - name: Create result directories
      ansible.builtin.file:
        path: "{{ result_base_dir }}/{{ item }}"
        state: directory
      loop: "{{ ctr_tools }}"
      tags: tests

    - name: Docker pull test container image
      community.docker.docker_image:
        name: "{{ tests_container }}"
        source: pull
      tags: tests
  
    - name: Podman pull test container image
      containers.podman.podman_image:
        name: "{{ tests_container }}"
      tags: tests

    - name: Upload test run script
      ansible.builtin.copy:
        src: run-containers.sh
        dest: "{{ result_base_dir }}/"
        mode: '0755'
      tags: tests

    - name: Check if tests are running
      ansible.builtin.command:
        cmd: "tmux has-session -t {{ container_name }}"
      register: tests_running
      failed_when: tests_running.rc >= 2
      tags:
        - tests
        - results
        - abort

    - name: Run tests if not running
      ansible.builtin.command:
        argv:
          - "tmux"
          - "new"
          - "-ds{{ container_name }}"
          - "{{ result_base_dir }}/run-containers.sh"
          - "{{ tests_container }}"
          - "{{ container_name }}"
          - "{{ in_container_result_dir }}"
          - "{{ result_base_dir }}"
      when: tests_running.rc == 1
      tags: tests

    - name: Get results
      ansible.builtin.fetch:
        src: "{{ result_base_dir }}/{{ item }}/latest.json"
        dest: ./results
      loop: "{{ ctr_tools }}"
      when: tests_running.rc == 1
      tags: results

    - name: Fetch current session logs
      ansible.builtin.fetch:
        src: "{{ result_base_dir }}/tmux.log"
        dest: ./results
      when: tests_running.rc == 0
      tags: results

    - name: Kill tmux session
      ansible.builtin.command:
        cmd: "tmux kill-session -t {{ container_name }}"
      when: tests_running.rc == 0
      tags: abort

    - name: Make sure docker container is stopped
      community.docker.docker_container:
        name: "{{ container_name }}"
        state: absent
      tags: abort

    - name: Make sure podman container is stopped
      containers.podman.podman_container:
        name: "{{ container_name }}"
        state: absent
      tags: abort


